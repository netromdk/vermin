name: Test

# On all pushes to branches and pull requests in general.
on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Start Linux jobs last since they are fastest to start and complete, and start 3.11 first,
        # since it pairs wiht macOS+Windows jobs.
        python-version: ['3.11', '3.10', 3.7, 3.8, 3.9, 2.7]
        os: [windows-latest, macos-latest, ubuntu-latest]

        # Choose test script depending on OS.
        include:
          - os: ubuntu-latest
            test_script_name: ./misc/actions/test.sh
          - os: macos-latest
            test_script_name: ./misc/actions/test.sh
          - os: windows-latest
            test_script_name: ./misc/actions/test.ps1

        # Only test on macOS and Windows with Python 3.11.
        exclude:
          - os: macos-latest
            python-version: 2.7
          - os: macos-latest
            python-version: 3.7
          - os: macos-latest
            python-version: 3.8
          - os: macos-latest
            python-version: 3.9
          - os: macos-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: 2.7
          - os: windows-latest
            python-version: 3.7
          - os: windows-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.9
          - os: windows-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
      with:
        python-version: ${{ matrix.python-version }}

    # The caches need to have the python version included since the
    # "misc/.coverage-requirements.txt" does not have version-pinning.
    - uses: actions/cache@940f3d7cf195ba83374c77632d1e2cbb2f24ae68
      if: startsWith(matrix.os, 'ubuntu-latest')
      with:
        path: ~/.cache/pip
        key: ${{ matrix.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/.*-requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-${{ matrix.python-version }}-
    - uses: actions/cache@940f3d7cf195ba83374c77632d1e2cbb2f24ae68
      if: startsWith(matrix.os, 'macos-latest')
      with:
        path: ~/Library/Caches/pip
        key: ${{ matrix.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/.*-requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-${{ matrix.python-version }}-
    - uses: actions/cache@940f3d7cf195ba83374c77632d1e2cbb2f24ae68
      if: startsWith(matrix.os, 'windows-latest')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ matrix.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/.*-requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-${{ matrix.python-version }}-

    - name: Test and coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true
      run: ${{ matrix.test_script_name }}

  # When all parallel tests are done and uploaded, the coveralls session can be signalled as
  # finished.
  finish:
    permissions:
      checks: write  # for coverallsapp/github-action to create new checks
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@50c33ad324a9902697adbf2f92c22cf5023eacf1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
